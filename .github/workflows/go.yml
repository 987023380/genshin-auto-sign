name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15.5

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: 编译项目
      run: |
        go build main.go
        mv main genshin-auto-sign #修改名称
        ls
        
    - name: 发布Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: release-${{github.sha}}
        release_name: release-${{github.sha}}
        draft: false
        prerelease: false
  
    - name: 上传编译文件到Release
      id: upload_release_asset
      uses: balrogsxt/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
        asset_path: ./genshin-auto-sign # 要上传文件
        asset_name: genshin-auto-sign # 上传后的文件名
        asset_content_type: application/octet-stream
        
    - name: 远程服务器部署
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          echo "---"
          echo ${{ steps.upload_release_asset.outputs.browser_download_url }}
          echo "---"
          echo ${{ steps.upload_release_asset.outputs.id }}
          echo ${{ steps.upload_release_asset.outputs }}
          cd /home/golangweb/genshin-auto-sign
          #下载构建好的文件
          wget https://api.github.com/repos/balrogsxt/genshin-auto-sign/releases/assets/${{ steps.upload_release_asset.outputs.id }}?access_token=${{ secrets.TOKEN }} -H "accept:application/octet-stream" --header="Accept:application/octet-stream" -O genshin-auto-sign1
          sh stop.sh #结束进程,会自动重启
